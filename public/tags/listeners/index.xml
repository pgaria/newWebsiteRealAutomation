<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Listeners on Testing, Automation, Programming and Latest Technology Articles</title>
    <link>https://www.pawangaria.com/tags/listeners/</link>
    <description>Recent content in Listeners on Testing, Automation, Programming and Latest Technology Articles</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>pawangaria@gmail.com (Pawan Garia)</managingEditor>
    <webMaster>pawangaria@gmail.com (Pawan Garia)</webMaster>
    <lastBuildDate>Thu, 04 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.pawangaria.com/tags/listeners/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Retry failed tests in TestNG?</title>
      <link>https://www.pawangaria.com/post/testng/retry-failed-test-in-testng/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan Garia)</author>
      <guid>https://www.pawangaria.com/post/testng/retry-failed-test-in-testng/</guid>
      <description>In automation Test Suits or running test cases in a bulk suite, we face unexpected Test failure or flaky test caused by network glitch, time-out or some other problem. There is a need for running the failed test cases so that we can get the proper result for the flaky TestCase.
 TestNG provides IRetryAnalyzer interface which can be used to run and configure your retry related logic.
 How to use IRetryAnalyzer: First of all, we should create a class which implements the IRetryAnalyzer interface which has one method public boolean retry(ITestResult result); which needs to be implemented.</description>
    </item>
    
    <item>
      <title>How to use TestNG Listeners?</title>
      <link>https://www.pawangaria.com/post/testng/how-to-use-testng-listeners/</link>
      <pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan Garia)</author>
      <guid>https://www.pawangaria.com/post/testng/how-to-use-testng-listeners/</guid>
      <description>Listeners listen to the event defined in the Test Scripts and behave accordingly. The main purpose of using listeners is to create logs for debugging but we can also manage Listeners for Test Framework Design.
What are TestNG Listeners? In Simple words, they are basically Java classes, which implement some TestNG Interfaces. So that when TestNG raises certain events like Test starting, Test Failure etc. TestNG will look for all Classes which are basically looking for such events and call the respective event handlers.</description>
    </item>
    
  </channel>
</rss>