<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Testing, Automation, Programming and Latest Technology Articles</title>
    <link>https://www.pawangaria.com/tags/java/</link>
    <description>Recent content in Java on Testing, Automation, Programming and Latest Technology Articles</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>pawangaria@gmail.com (Pawan Garia)</managingEditor>
    <webMaster>pawangaria@gmail.com (Pawan Garia)</webMaster>
    <lastBuildDate>Tue, 30 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.pawangaria.com/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Integrate Automated TestNG @Test with @DataProvider Results in TestRail</title>
      <link>https://www.pawangaria.com/post/automation/integrate-automated-testng-test-with-dataprovider-results-in-testrail/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan Garia)</author>
      <guid>https://www.pawangaria.com/post/automation/integrate-automated-testng-test-with-dataprovider-results-in-testrail/</guid>
      <description>I saw multiple people are struggling to integrate the TestNG Tests with the TestRail and it becomes even more complex when we start using the @DataProvides in TestNG and then update the Results in the TestRail. So I decided to write and create a step by step complete guide with an example of how we can use @DataProvider and normal @Test and update the results using the TestNG Listeners. As we all know the TestRail is a web-based test case management software to store, manage, track &amp;amp; run test cases.</description>
    </item>
    
    <item>
      <title>Object Oriented Programming Principles and Concepts Explained!</title>
      <link>https://www.pawangaria.com/post/java/object-oriented-programming-concepts/</link>
      <pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan Garia)</author>
      <guid>https://www.pawangaria.com/post/java/object-oriented-programming-concepts/</guid>
      <description>What is an object? Object-oriented languages follow a different programming pattern from structured programming languages like C and COBOL. The Java language is not completely an object-oriented. The structured-programming paradigm is highly data-oriented: You have data structures, and then program instructions act on that data. Object-oriented languages such as the Java language combine data and program instructions into objects.
An object is a self-contained entity that contains attributes and behavior. Instead of having a data structure with fields (attributes) and passing that structure around to all the program logic that acts on it (behavior), in an object-oriented language, data and program logic are combined.</description>
    </item>
    
    <item>
      <title>Integrate Gurock TestRail with Automated TestCases in Java&#43;TestNG</title>
      <link>https://www.pawangaria.com/post/automation/testrail-integration-with-java-testng/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <author>pawangaria@gmail.com (Pawan Garia)</author>
      <guid>https://www.pawangaria.com/post/automation/testrail-integration-with-java-testng/</guid>
      <description>What is TestRail? Gurock TestRail is a modern and very nice tool for the Test Case Management by Quality Assurance and Development Team. TestManagement tools are very helpful for managing the test cases and TestRail is pack with very useful features like web-based application, Rest API integration etc.
Why to use TestManagement Tool with Automation? While making Regression or any kind of Test Automation suit there is a need of maintaining Use cases and maintain the repository which anyone can access and see what use cases are been automated and what is left.</description>
    </item>
    
  </channel>
</rss>