<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Testng on My blog</title>
    <link>/tags/testng/</link>
    <description>Recent content in Testng on My blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>yourname@example.com (yourname)</managingEditor>
    <webMaster>yourname@example.com (yourname)</webMaster>
    <copyright>(c) 2016 Copyright my blog</copyright>
    <lastBuildDate>Sun, 17 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/testng/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What is the TestNG.xml file?</title>
      <link>/2017/12/17/what-is-testng-xml-file/</link>
      <pubDate>Sun, 17 Dec 2017 00:00:00 +0000</pubDate>
      <author>yourname@example.com (yourname)</author>
      <guid>/2017/12/17/what-is-testng-xml-file/</guid>
      <description>TestNG.xml file is an XML file which contains all the Test configuration and this XML file can be used to run and organize our test. TestNG eclipse plugin can be used to automatically generate testng.xml file so no need to write from scratch. In this article, we are going to learn about what is testng.xml and how to use testng.xml file to run our test.
Create Class with multiple @test methods: First, we need to create a simple class which contains multiple @test methods.</description>
    </item>
    
    <item>
      <title>What are TestNG Annotations?</title>
      <link>/2017/12/16/what-are-testng-annotations/</link>
      <pubDate>Sat, 16 Dec 2017 00:00:00 +0000</pubDate>
      <author>yourname@example.com (yourname)</author>
      <guid>/2017/12/16/what-are-testng-annotations/</guid>
      <description>Before talking about annotations we should talk a little bit about why TestNG is required and what is the need for using any test management frameworks in our test.
All the tests are designed to allow you to quickly verify your application using a very large and diverse set of different data inputs. So test management tools are responsible for managing our test and provide many functionalities or you can say methods we can directly use in Test and no need to write the logic again like comparing two objects, pre-setup for Test, passing a different set of data and many more.</description>
    </item>
    
    <item>
      <title>What is TestNG?</title>
      <link>/2017/12/15/what-is-testng/</link>
      <pubDate>Fri, 15 Dec 2017 00:00:00 +0000</pubDate>
      <author>yourname@example.com (yourname)</author>
      <guid>/2017/12/15/what-is-testng/</guid>
      <description>TestNG is a test management framework inspired from JUnit and NUnit frameworks. TestNG provided and introduced new functionalities and features which make TestNg very powerful and mostly used test management framework in Java programming language. As per the creator of TestNG Mr. CÃ©dric Beust NG stands for next generation.
TestNG can be used in all the phases of testing like Unit testing, integration testing or system testing. TestNG provides better support compare to Junit and other frameworks as the new release and bug fixes are very frequent compared to Junit.</description>
    </item>
    
    <item>
      <title>Integrate Gurock TestRail with Automated TestCases in Java&#43;TestNG</title>
      <link>/2017/11/23/testrail-integration-with-java-testng/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      <author>yourname@example.com (yourname)</author>
      <guid>/2017/11/23/testrail-integration-with-java-testng/</guid>
      <description>What is TestRail? Gurock TestRail is a modern and very nice tool for the Test Case Management by Quality Assurance and Development Team. TestManagement tools are very helpful for managing the test cases and TestRail is pack with very useful features like web-based application, Rest API integration etc.
Why to use TestManagement Tool with Automation? While making Regression or any kind of Test Automation suit there is a need of maintaining Use cases and maintain the repository which anyone can access and see what use cases are been automated and what is left.</description>
    </item>
    
  </channel>
</rss>